var BaselineTest=function(){"use strict";return{settings:{tags:["h1","h2","h3","p","small","li","tc","span"],desiredBaseline:16,container:"body"},init:function(){var e=0,t=this.settings.tags;while(e<t.length){this.check(t[e]);e+=1}},check:function(e){var t=this.utilSelector(this.settings.container,e);if(t!==undefined){window.getComputedStyle(t).display==="inline"&&(t.style.display="inline-block");this.displayOutput(e,t)}},utilPx:function(e){return parseInt(e.replace("px",""),10)},utilCheck:function(e){return e%this.settings.desiredBaseline===0||e===0?!0:!1},utilSelector:function(e,t){return document.querySelectorAll(e+" "+t)[0]},utilPropose:function(e,t,n,r){var i,s;if(e===!0)return"already correct";i=Math.ceil(t/this.settings.desiredBaseline)*this.settings.desiredBaseline;s=i/this.calcFontSize(n);return s*1e3===Math.ceil(s*1e3)?s+r:i+"px (ideally change the font-size first)"},calcHeight:function(e){var t;t=e.getBoundingClientRect().bottom-e.getBoundingClientRect().top-this.calcPaddingTop(e)-this.calcPaddingBottom(e);return t},calcFontSize:function(e){return this.utilPx(window.getComputedStyle(e).fontSize)},calcLineHeight:function(e){var t;t=window.getComputedStyle(e).lineHeight;if(t!=="normal")return t;t=this.calcHeight(e)/this.calcFontSize(e);return t},calcPaddingTop:function(e){return this.utilPx(window.getComputedStyle(e).paddingTop)+this.utilPx(window.getComputedStyle(e).borderTopWidth)},calcPaddingBottom:function(e){return this.utilPx(window.getComputedStyle(e).paddingBottom)+this.utilPx(window.getComputedStyle(e).borderBottomWidth)},calcMarginTop:function(e){return this.utilPx(window.getComputedStyle(e).marginTop)},calcMarginBottom:function(e){return this.utilPx(window.getComputedStyle(e).marginBottom)},checkBaseline:function(e){if(this.calcHeight(e)%this.settings.desiredBaseline===0){e.style.backgroundColor="blue";return!0}e.style.backgroundColor="red";return!1},paddingTop:function(e){return this.utilCheck(this.calcPaddingTop(e))},paddingBottom:function(e){return this.utilCheck(this.calcPaddingBottom(e))},checkPadding:function(e){if(this.paddingTop(e)&&this.paddingBottom(e)){e.style.fontWeight="500";return!0}this.paddingTop(e)||this.paddingBottom(e)?e.style.fontWeight="700":e.style.fontWeight="900";return!1},marginTop:function(e){return this.utilCheck(this.calcMarginTop(e))},marginBottom:function(e){return this.utilCheck(this.calcPaddingBottom(e))},checkMargin:function(e){if(this.marginTop(e)&&this.marginBottom(e)){e.style.opacity="1";return!0}this.marginTop(e)||this.marginBottom(e)?e.style.opacity="0.75":e.style.opacity="0.5";return!1},proposeHeight:function(e){return this.utilPropose(this.checkBaseline(e),this.calcHeight(e),e,"")},proposePaddingTop:function(e){return this.utilPropose(this.checkPadding(e),this.calcPaddingTop(e),e,"em")},proposePaddingBottom:function(e){return this.utilPropose(this.checkPadding(e),this.calcPaddingBottom(e),e,"em")},consoleOutput:function(e,t){console.log(e+" is "+this.calcHeight(t)+"px high"+", I propose a line height of "+this.proposeHeight(t)+", and its font-size is "+this.calcFontSize(t)+"px "+", and the line-height is "+this.calcLineHeight(t)+", a match is "+this.checkBaseline(t)+", and a margin match is "+this.checkMargin(t)+", and a padding match is "+this.checkPadding(t)+", recommended top-padding is "+this.proposePaddingTop(t))},displayOutput:function(e,t){this.checkBaseline(t);this.checkMargin(t);console.log(e+" recommended top-padding is "+this.proposePaddingTop(t));console.log(e+" recommended line-height is "+this.proposeHeight(t));console.log(e+" recommended bottom-padding is "+this.proposePaddingBottom(t))}}}();BaselineTest.init();