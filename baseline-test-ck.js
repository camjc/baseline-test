(function(){"use strict";var e={settings:{tags:["h1","h2","h3","p","small","li","tc","span"],desiredBaseline:11},init:function(){var e=0;while(e<this.settings.tags.length){this.consoleOutput(this.settings.tags[e]);e+=1}},getCurrent:function(e){return document.getElementsByTagName(e)[0]},calcHeight:function(e){var t;if(e.getBoundingClientRect().top!==null){t=e.getBoundingClientRect().bottom-e.getBoundingClientRect().top;return t}t=e.offsetHeight;return t},calcFontSize:function(e){return window.getComputedStyle(e).fontSize.replace("px","")},calcLineHeight:function(e){var t,n,r;t=window.getComputedStyle(e).lineHeight;if(t!=="normal")return t;n=this.calcHeight(e);r=this.calcFontSize(e).replace("px","");t=n/r;return t},calcMarginTop:function(e){return window.getComputedStyle(e).marginTop.replace("px","")},calcMarginBottom:function(e){return window.getComputedStyle(e).marginBottom.replace("px","")},checkBaseline:function(e){if(this.calcHeight(e)%this.settings.desiredBaseline===0){e.style.backgroundColor="blue";return!0}e.style.backgroundColor="red";return!1},marginTop:function(e){return this.calcMarginTop(e)%this.settings.desiredBaseline===0||this.calcMarginTop(e)===0?!0:!1},marginBottom:function(e){return this.calcMarginBottom(e)%this.settings.desiredBaseline===0||this.calcMarginBottom(e)===0?!0:!1},checkMargin:function(e){if(this.marginTop(e)&&this.marginBottom(e)){e.style.opacity="1";return!0}this.marginTop(e)||this.marginBottom(e)?e.style.opacity="0.75":e.style.opacity="0.5";return!1},proposeHeight:function(e){return this.checkBaseline(e)===!0?!0:Math.ceil(this.calcHeight(e)/this.settings.desiredBaseline)*this.settings.desiredBaseline/this.calcFontSize(e)},consoleOutput:function(e){var t=this.getCurrent(e);if(t===undefined)return null;console.log(e+" is "+this.calcHeight(t)+"px high"+", I propose a line height of "+this.proposeHeight(t)+", and its font-size is "+this.calcFontSize(t)+"px "+", and the line-height is "+this.calcLineHeight(t)+", a match is "+this.checkBaseline(t)+", and its top margin is "+this.calcMarginTop(t)+", and a margin match is "+this.checkMargin(t))},displayOutput:function(e){var t=this.getCurrent(e);if(t===undefined)return null;this.checkBaseline(t);this.checkMargin(t);console.log(this.proposeHeight(t))}};e.init()})();